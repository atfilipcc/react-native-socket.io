{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/Filip/Documents/Dev/react-native-ui/react-native-ui/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSocketIoMiddleware from \"redux-socket.io\";\nimport { Provider } from \"react-redux\";\nimport io from \"socket.io-client\";\nvar socket = io(\"http://192.168.0.18:3001\");\nvar socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\nvar initialState = {\n  onlineUsers: [],\n  currentUser: '',\n  chatMessages: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"users_online\":\n      var chatMessages = _objectSpread({}, state.chatMessages);\n\n      var onlineUsers = action.data;\n\n      for (var i = 0; i < onlineUsers.length; i++) {\n        var userId = onlineUsers[i].userId;\n\n        if (chatMessages[userId] === undefined) {\n          chatMessages[userId] = {\n            messages: [],\n            username: onlineUsers[i].username\n          };\n        }\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        onlineUsers: onlineUsers,\n        chatMessages: chatMessages\n      });\n\n    case \"get_current_user\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: action.data\n      });\n\n    case \"pm\":\n      var chatId = action.data.chatId;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatMessages: _objectSpread(_objectSpread({}, state.chatMessages), {}, _defineProperty({}, chatId, _objectSpread(_objectSpread({}, state.chatMessages[chatId]), {}, {\n          messages: [action.data.message].concat(_toConsumableArray(state.chatMessages[chatId].messages))\n        })))\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar store = applyMiddleware(socketIoMiddleware)(createStore)(reducer);\nstore.subscribe(function () {\n  return console.log(\"subscribe\", store.getState());\n});\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/Filip/Documents/Dev/react-native-ui/react-native-ui/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","createStore","applyMiddleware","createSocketIoMiddleware","Provider","io","socket","socketIoMiddleware","initialState","onlineUsers","currentUser","chatMessages","reducer","state","action","type","data","i","length","userId","undefined","messages","username","chatId","message","store","subscribe","console","log","getState","App","isLoadingComplete","colorScheme"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSocketIoMiddleware from \"redux-socket.io\";\nimport { Provider, useSelector } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { IReduxAction, IReduxPMObject, IReduxState } from \"./types\";\n\nconst socket = io(\"http://192.168.0.18:3001\");\nconst socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\nconst initialState: IReduxState = {\n  onlineUsers: [],\n  currentUser: '',\n  chatMessages: [],\n};\n\nconst reducer = (state = initialState, action: IReduxAction) => {\n  switch (action.type) {\n    case \"users_online\":\n      const chatMessages = { ...state.chatMessages };\n      const onlineUsers = action.data;\n      for (let i = 0; i < onlineUsers.length; i++) {\n        const userId = onlineUsers[i].userId;\n        if (chatMessages[userId] === undefined) {\n          chatMessages[userId] = {\n            messages: [],\n            username: onlineUsers[i].username,\n          };\n        }\n      }\n      return { ...state, onlineUsers, chatMessages };\n    case \"get_current_user\":\n      return { ...state, currentUser: action.data };\n    case \"pm\":\n      const chatId = action.data.chatId;\n      return {\n        ...state,\n        chatMessages: {\n          ...state.chatMessages,\n          [chatId]: {\n            ...state.chatMessages[chatId],\n            messages: [\n              action.data.message,\n              ...state.chatMessages[chatId].messages,\n            ],\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = applyMiddleware(socketIoMiddleware)(createStore)(reducer);\n\nstore.subscribe(() => console.log(\"subscribe\", store.getState()));\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Provider store={store}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </Provider>\n      </SafeAreaProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}